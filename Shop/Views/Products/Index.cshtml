@model PagedList.IPagedList<Shop.Model.Models.Product>
@using System.Drawing
@using PagedList.Mvc;
@using Shop.Model.Helpers
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Lista przedmiotów";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Page title -->
<div class="page-title">
    <div class="container">
        <h2 style="float: left;">
            <i class="fa fa-desktop color"></i> Sklep MikAd <small>lista produktów &nbsp;&nbsp;&nbsp; </small>
        </h2>

        <!-- Search bar-->
        @using (Html.BeginForm("Index", "Products", FormMethod.Get))
        {
            <h3>
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "searchBar", @placeholder = "Czego szukasz?" })
                <input type="submit" value="Wyszukaj" />
            </h3>
        }
        <hr />
    </div>
</div>
<!-- Page title -->
<!-- Page content -->

<div class="shop-items">
    <div class="container">

        <div class="row" ng-controller="OrdersController">

            <div class="col-md-9 col-md-push-3">

                <!-- Breadcrumb -->
                <ul class="breadcrumb">
                    <li>@Html.ActionLink("MikAd", "Index", "Home") <span class="divider"></span></li>
                    <li> @Html.ActionLink("Produkty", "Index")<span class="divider"></span></li>
                    <li class="active">
                        @Model.TotalItemCount produktów
                    </li>
                </ul>

                <!-- Wyświetlanie produktów -->
                @if (Model.Count > 0)
                {
                    var i = 0;
                    foreach (var item in Model)
                    {
                        // Jeżeli wyświetlone trzy produkty, to przejdź do nowego wiersza                 
                        i++;
                        if (i%3 == 0)
                        {
                            <div class="row">
                                <div class="col-md-4 col-sm-6 col-xs-12">
                                    <div class="item">
                                        <!-- Obraz przedmiotu -->
                                        <div class="item-image">
                                            @Html.ActionImage("Details", new {id = item.Id}, item.Photo, "Details")
                                        </div>
                                        <!-- Szczegóły przedmiotu -->
                                        <div class="item-details">
                                            <!-- Name -->
                                            <h5>@Html.ActionLink(item.Name, "Details", new {id = item.Id})</h5>
                                            <div class="clearfix"></div>
                                            <!-- Krótki opis, po dwóch liniach ucinany -->
                                            <p style="overflow: hidden">@Html.DisplayFor(modelItem => item.Description)</p>
                                            <hr/>
                                            <!-- Cena -->
                                            <div class="item-price pull-left">@Html.DisplayFor(modelItem => item.Price)</div>
                                            <!-- Dodaj do koszyka -->
                                            <div class="pull-right">
                                                <a href="#" class="btn btn-danger btn-sm">Dodaj do koszyka</a>
                                            </div>
                                            <div class="clearfix"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-4 col-sm-6 col-xs-12">
                                <div class="item">
                                    <!-- Obraz przedmiotu -->
                                    <div class="item-image">
                                        @Html.ActionImage("Details", new {id = item.Id}, item.Photo, "Details")
                                    </div>
                                    <!-- Szczegóły przedmiotu -->
                                    <div class="item-details">
                                        <!-- Name -->
                                        <h5>@Html.ActionLink(item.Name, "Details", new {id = item.Id})</h5>
                                        <div class="clearfix"></div>
                                        <!-- Krótki opis, po dwóch liniach ucinany -->
                                        <p style="overflow: hidden">@Html.DisplayFor(modelItem => item.Description)</p>
                                        <hr/>
                                        <!-- Cena -->
                                        <div class="item-price pull-left">@Html.DisplayFor(modelItem => item.Price)zł</div>
                                        <!-- Dodaj do koszyka -->
                                        <div class="pull-right">
                                            <button type="button" class="btn btn-danger btn-sm" ng-click="addProductToOrder(@item.Id, 1)">Dodaj do koszyka</button>
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
                else
                {
                    <h3>Nie znaleziono rekordów spełniających kryteria wyszukiwania. </h3>
                }
                <div class="row">
                    <div class="col-md-12">
                        <!-- Paginacja -->
                        <ul class="pagination">
                            Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount
                            @Html.PagedListPager(Model, page => Url.Action("Index",
                            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))
                        </ul>
                    </div>
                </div>

            </div>

            <!-- Kategorie -->
            <div class="col-md-3 col-md-pull-9">
                <div class="sidey">
                    @{
                        Html.RenderAction("_CategoriesPartial", "Products");
                    }
                </div>
                <!-- Sidebar - polecane produkty -->
                @{
                    Html.RenderAction("_FeaturedProductsPartial", "Products");
                }
            </div>
        </div>
        <div class="sep-bor"></div>
    </div>
</div>
